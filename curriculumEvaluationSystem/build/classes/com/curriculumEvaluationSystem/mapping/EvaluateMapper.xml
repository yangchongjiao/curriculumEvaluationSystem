<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.curriculumEvaluationSystem.dao.EvaluateMapper" >
  <resultMap id="BaseResultMap" type="com.curriculumEvaluationSystem.bean.Evaluate" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="wenti_id" property="wentiId" jdbcType="INTEGER" />
    <result column="student_id" property="studentId" jdbcType="INTEGER" />
    <result column="class_id" property="classId" jdbcType="INTEGER" />
    <result column="grade" property="grade" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, wenti_id, student_id, class_id, grade
  </sql>
  <sql id="evaluateSql" >
    e.id, e.wenti_id wentiId, 
    e.student_id studentId, 
    e.class_id classId, 
    e.grade
  </sql>
  <select id="selectByPrimaryKey" resultType="java.util.Map" parameterType="java.lang.Integer" >
    select 
    <include refid="evaluateSql" />,
    s.student_number studentNumber,
    s.name studentName,
    q.content questionContent, 
    c.classname className 
    from evaluate e
    LEFT JOIN student s ON s.id = e.student_id
    LEFT JOIN question q ON q.id = e.wenti_id
    LEFT JOIN course_load c ON c.id = e.class_id
    where e.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from evaluate
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert"  useGeneratedKeys="true" keyProperty="id" parameterType="com.curriculumEvaluationSystem.bean.Evaluate" >
    insert into evaluate (id, wenti_id, student_id, class_id, 
      grade)
    values (#{id,jdbcType=INTEGER}, #{wentiId,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, 
       #{classId,jdbcType=INTEGER}, #{grade,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective"  useGeneratedKeys="true" keyProperty="id" parameterType="com.curriculumEvaluationSystem.bean.Evaluate" >
    insert into evaluate
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="wentiId != null" >
        wenti_id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="grade != null" >
        grade,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="wentiId != null" >
        #{wentiId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.curriculumEvaluationSystem.bean.Evaluate"  >
    update evaluate
    <set >
      <if test="wentiId != null" >
        wenti_id = #{wentiId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.curriculumEvaluationSystem.bean.Evaluate" >
    update evaluate
    set wenti_id = #{wentiId,jdbcType=INTEGER},
      student_id = #{studentId,jdbcType=INTEGER}, 
      class_id = #{classId,jdbcType=INTEGER},
      grade = #{grade,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByParam" resultType="java.util.Map" parameterType="com.curriculumEvaluationSystem.bean.Evaluate" >
    select 
    <include refid="evaluateSql" />,
    s.student_number studentNumber,
    s.name studentName,
    q.content questionContent, 
    c.classname className 
    from evaluate e
    LEFT JOIN student s ON s.id = e.student_id
    LEFT JOIN question q ON q.id = e.wenti_id
    LEFT JOIN course_load c ON c.id = e.class_id
    where 1=1 
    <if test="studentId != null and studentId != ''">
       and  e.student_id = #{studentId,jdbcType=INTEGER}
    </if>
    <if test="wentiId != null and wentiId != ''">
       and  e.wenti_id = #{wentiId,jdbcType=INTEGER}
    </if>
    <if test="classId != null and classId != ''">
       and  e.class_id = #{classId,jdbcType=INTEGER}
    </if>
  </select>
  
  <select id="selectAll" resultType="java.util.Map" parameterType="com.curriculumEvaluationSystem.bean.Evaluate" >
    select 
    <include refid="evaluateSql" />,
    s.student_number studentNumber,
    s.name studentName,
    c.classname className 
    from evaluate e
    LEFT JOIN student s ON s.id = e.student_id
    LEFT JOIN question q ON q.id = e.wenti_id
    LEFT JOIN course_load c ON c.id = e.class_id
  </select>
</mapper>